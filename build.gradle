plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
    id 'jacoco'
}

group = 'dev.idion'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.querydsl:querydsl-jpa'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.flywaydb:flyway-core'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Bean Validation 2.0 => 추후 3.0 Release 되면 Migration
    implementation 'org.hibernate.validator:hibernate-validator:6.1.7.Final'
    implementation 'org.glassfish:jakarta.el:3.0.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    attributes "snippets": snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor //gradle build 시 asciidoctor -> bootJar 순으로 수행됩니다.
    from("${asciidoctor.outputDir}/html5") {
//gradle build 시 ./build/asciidoc/html5/ 에 html 파일이 생깁니다. 이것을 jar 안에 /static/docs/ 폴더에 복사가 됩니다.
        into 'static/docs'
    }
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// 추가시 gradle/Tasks/verification에 jacocoTestReport, jacocoTestVerification이 생성됨.
jacoco {
    // JaCoCo 버전
    toolVersion = '0.8.6'
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 150
            }

            excludes = [
                    '*.Q*' // QueryDSL 관련 클래스 제외
            ]
        }
    }
}

task testCoverage(type: Test) {
    group 'verification'
    description 'Unit test and Coverage'

    dependsOn(':test',
            ':jacocoTestReport',
            ':jacocoTestCoverageVerification')

    tasks['jacocoTestReport'].mustRunAfter(tasks['test'])
    tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
}
